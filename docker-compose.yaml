version: "3.4"

services:
    
    jenkins:
        image: jenkins/jenkins
        environment:
            JENKINS_OPTS: "--prefix=/jenkins"
            TZ: "Asia/Beirut"
        volumes:
            - jenkins_home:/var/jenkins_home
        networks:
            network: {}
    
    sonarqube:
        image: sonarqube
        command: "-Dsonar.web.context=/sonar"
        environment:
            SONARQUBE_JDBC_USERNAME: sonar
            SONARQUBE_JDBC_PASSWORD: sonar
            SONARQUBE_JDBC_URL: "jdbc:postgresql://postgres/sonar"
            TZ: "Asia/Beirut"
        volumes:
            - sonar_conf:/opt/sonarqube/conf
            - sonar_data:/opt/sonarqube/data
            - sonar_extensions:/opt/sonarqube/extensions
            - sonar_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
        networks:
            network: {}
        depends_on:
            - postgres
    
    postgres:
        image: "postgres:10"
        environment:
            POSTGRES_DB: sonar
            POSTGRES_USER: sonar
            POSTGRES_PASSWORD: sonar
            TZ: "Asia/Beirut"
        volumes:
            - sonar_db:/var/lib/postgresql/data
        networks:
            network: {}

    nexus:
        image: "sonatype/nexus3"
        environment:
            NEXUS_CONTEXT: nexus
            TZ: "Asia/Beirut"
        volumes:
            - nexus_data:/nexus-data
        networks:
            network: {}         
    
    nginx:
        image: nginx
        ports:
            - "80:80"
        environment:
            TZ: "Asia/Beirut"
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
        networks:
            network: {}
        depends_on:
            - jenkins
            - sonarqube
            - nexus

volumes:
    jenkins_home:
    sonar_conf:
    sonar_data:
    sonar_extensions:
    sonar_bundled-plugins:
    sonar_db:
    nexus_data:

networks:
    network:
    
